stages:
- test
- report
- pages
- noty

variables:
  ENVIRONMENT: dev
  TESTCASE_DIR: tests
  FEISHU_NOTY_TOKEN: ''

default:
  tags:
    - matebook # 替换为你的 GitLab Runner 支持的 tags

cache:
  key: $CI_PROJECT_ID
  paths:
    - pip-cache
    - allure-results-global # 历史全部数据，用于生成聚合报告
    - allure-report-global # 上一份报告，需要 history 目录生成趋势图


before_script:
   - pwd

after_script:
   - pwd


# `test` stage
#========================================================
api-test:
  stage: test
  image: python:3.8
  artifacts:
    name: '$CI_COMMIT_REF_SLUG'
    paths:
      - allure-results
      - allure-results-global
    when: always
    expire_in: 7 day
  allow_failure: true
  before_script:
    - |
      mkdir -p pip-cache
      export PIP_CACHE_DIR="pip-cache"
      export LANG=en_US:zh_CN.UTF-8
      source /etc/profile
    - python3 -m pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple
    - pip install poetry -i https://pypi.tuna.tsinghua.edu.cn/simple > temp.log 2>&1
    - python3 -m poetry config cache-dir /cache/pypoetry --local
    - python3 -m poetry config virtualenvs.path /cache/pypoetry/virtualenvs --local
    - python3 -m poetry install
  script:
    - |
      if [ $TESTCASE_DIR ];then
        python3 -m poetry run pytest ${TESTCASE_DIR} --env ${ENVIRONMENT} -s -v --alluredir=allure-results --clean-alluredir
      else
        python3 -m poetry run pytest $(sh script/testcase_changes.sh ) --env ${ENVIRONMENT} -s -v --alluredir=allure-results --clean-alluredir
      fi
    - sh scripts/generate_allure_environment.sh > allure-results/environment.properties # allure 环境变量信息
    - sh scripts/generate_allure_executor.sh > allure-results/executor.json # allure 执行者信息
    - mkdir -p allure-results-global
    - cp -r allure-results/* allure-results-global
    - | # allure 需要根据上一份报告的 history 目录生成 trend 图
      if [[ -d "allure-report-global/history" ]]; then
        mkdir -p allure-results-global/history
        cp -r allure-report-global/history/* allure-results-global/history || true
      fi


# `report` stage
#========================================================
allure-report:
  stage: report
  image: frankescobar/allure-docker-service:latest # ref: https://github.com/fescobar/allure-docker-service
  artifacts:
    name: '$CI_COMMIT_REF_SLUG'
    paths:
      - allure-report
      - allure-report-global
    when: always
    expire_in: 7 day
  script: # 这个镜像写入权限很迷，比如 allure-report-global 目录有个空的 history 就报错。
    - |
      if [[ -d "allure-results" ]]; then
        allure generate allure-results -o allure-report --clean
      fi
      if [[ -d "allure-results-global" ]]; then
        allure generate allure-results-global -o allure-report-global --clean
      fi
    - bash scripts/pretty_allure_report.sh
    - echo "本次报告" https://${CI_PROJECT_NAMESPACE}.gitlab.io/-/${CI_PROJECT_NAME}/-/jobs/${CI_JOB_ID}/artifacts/allure-report/index.html


# `noty` stage
#========================================================
pages: # For GitLab Pages, this job has a specific name, called pages.
  stage: pages
  artifacts:
    name: '$CI_COMMIT_REF_SLUG'
    paths:
      - public # GitLab Pages only considers files in a directory called public.
    when: always
    expire_in: 7 day
  script:
    - mkdir -p public
    - cp -r allure-report-global/* public
    - echo "全量报告" $CI_PAGES_URL


# `noty` stage
#========================================================
noty-dingtalk:
  stage: noty
  script:
    - pwd # TODO

noty-feishu:
  stage: noty
  script:
    - sh scripts/send_feishu_noty.sh # 依赖 allure-results 目录获取数据